% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingfunctions.R
\name{plotDistCountAnalysis}
\alias{plotDistCountAnalysis}
\title{Creates a boxplot to see the distribution of read counts in type-specific and
shared TSS-proximal and TSS-distal regions.}
\usage{
plotDistCountAnalysis(analysisresults, counts, viewer = TRUE,
  palette = c("#C71585", "#d3d3d3", "#00E5EE", "#000080"),
  xlabelsize = "13px", ylabel = "log2(FPKM)", ylabelsize = "13px",
  maintitle = "Distribution of Normalized Counts (peaks types determine by intensity)",
  maintitlesize = "20px", xlabel = NULL)
}
\arguments{
\item{analysisresults}{output generated from countanalysis() then
categAltrePeaks()}

\item{counts}{output generated from getCounts()}

\item{viewer}{whether the plot should be displayed in the RStudio viewer or
in Shiny/Knittr}

\item{palette}{choose an RColorBrewer palette ("Set1", "Set2", "Set3",
"Pastel1", "Pastel2", "Paired", etc.) or submit a vector of colors}

\item{xlabelsize}{size of xlabel (default, 15px)}

\item{ylabel}{label for y-axis (default, "Observations")}

\item{ylabelsize}{size of ylabel (default, 15px)}

\item{maintitle}{main title (default, "Distribution of Normalized Counts")}

\item{maintitlesize}{main title size (default, 20px)}

\item{xlabel}{label for x-axis (default, sample names)}
}
\value{
a highcharter object
}
\description{
Takes the rlog transformation of the RRKM (Reads Per Kilobase of transcript
per Million) of the read counts of type-specific and shared regulatory
regions and plots the distribution of those read counts in all sample types
analyzed in the workflow.
}
\examples{
\dontrun{
csvfile <- loadCSVFile("DNaseEncodeExample.csv")
samplePeaks <- loadBedFiles(csvfile)
consensusPeaks <- getConsensusPeaks(samplepeaks = samplePeaks,
minreps = 2)
TSSannot <- getTSS()
consensusPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consensusPeaks,
TSS = TSSannot,
merge = TRUE,
regionspecific = TRUE,
distancefromTSSdist = 1500,
distancefromTSSprox = 1000)
consensusPeaksCounts <- getCounts(annotpeaks = consensusPeaksAnnotated,
                                 sampleinfo = csvfile,
                                 reference = 'SAEC',
                                 chrom = 'chr21')
alteredPeaks <- countanalysis(counts = consensusPeaksCounts,
pval = 0.01,
lfcvalue = 1)
alteredPeaksCategorized <- categAltrePeaks(alteredPeaks,
                                          lfctypespecific = 1.5,
                                          lfcshared = 1.2,
                                          pvaltypespecific = 0.01,
                                          pvalshared = 0.05)
plotDistCountAnalysis(analysisresults = alteredPeaksCategorized, counts = consensusPeaksCounts)
}
}

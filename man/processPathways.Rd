% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_runGREATpathway.R
\name{processPathways}
\alias{processPathways}
\title{Enrichment analysis using GREAT package
to identify putative pathways of interest for further
investigation}
\usage{
processPathways(GREATpath, pathway_category = "GO", adjustby = "bonferroni",
  test = "Binom", enrichcutoff = 2, adjpvalcutoff = 0.05)
}
\arguments{
\item{GREATpath}{output of runGREAT()}

\item{pathway_category}{character, "GO", "Pathway Data", "Regulatory Motifs",
"Phenotype Data and Human Disease", "Gene Expression", "Gene Families"
(default is "GO")}

\item{adjustby}{character, "fdr" or "bonferroni", default is "bonferroni"}

\item{test}{character, "Both" denotes hypergeometric and binomical tests are used to
    determine enriched pathways, "Binom" denotes binomial tests used, "Hyper" denotes
hypergeometric tests are used.  Default is "Binom"}

\item{enrichcutoff}{numeric, fold change enrichment cutoff to determine enriched pathways,
default is 2}

\item{adjpvalcutoff}{numeric, Bonferroni adjusted p-value cutoff to determine enriched pathways,
default is 0.05}
}
\value{
list of dataframes for enriched pathways - each dataframe in the list
represents one pathway type (e.g. "GO Molecular Function")
}
\description{
Enrichment analysis using GREAT package
to identify putative pathways of interest for further
investigation
}
\examples{
\dontrun{
csvfile <- loadCSVFile("DNaseEncodeExample.csv")
samplePeaks <- loadBedFiles(csvfile)
consensusPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
TSSannot <- getTSS()
consensusPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consensusPeaks,
                                          TSS = TSSannot,
                                          merge = TRUE,
                                          regionspecific = TRUE,
                                          distancefromTSSdist = 1500,
                                          distancefromTSSprox = 1000)
consensusPeaksCounts <- getCounts(annotpeaks = consensusPeaksAnnotated,
                              reference = 'SAEC',
                              sampleinfo = csvfile,
                              chrom = 'chr21')
alteredPeaks <- countanalysis(counts=consensusPeaksCounts,
                             pval=0.01,
                             lfcvalue=1)
alteredPeaksCategorized <- categAltrePeaks(alteredPeaks,
                             lfctypespecific = 1.5,
                             lfcshared = 1.2,
                             pvaltypespecific = 0.01,
                             pvalshared = 0.05)
callPaths <- runGREAT(peaks = alteredPeaksCategorized)
pathResults <- processPathways(callPaths, pathway_category = "GO",
enrichcutoff = 2, adjpvalcutoff = 0.05)
}
}

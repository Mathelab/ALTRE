% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4_getcountsWindows.R
\name{getCounts}
\alias{getCounts}
\title{Generates count data for regulatory regions. This function is best for
WINDOWS USERS ONLY. If you are using Linux or MacOS, getCountsFast is the
better choice (it is faster).}
\usage{
getCounts(annotpeaks, sampleinfo, reference, singleEnd = TRUE, chrom = NULL)
}
\arguments{
\item{annotpeaks}{list output from combineAnnotatePeaks() function}

\item{sampleinfo}{dataframe as returned from loadCSVFile() function}

\item{reference}{name of sample type to be
considered 'reference' in DESeq2 analysis}

\item{singleEnd}{whether input data is single-end (default is TRUE)}

\item{chrom}{optional, only chromosome chrom will be evaluated}
}
\value{
List containing three items:
(1) DESeqDataSet: contains count information for all replicates of all samples
(2) Matrix: contains number of TSS-distal and TSS-proximal
 before and after filtering (if applicable)
(3) Data frame for creating a density plot (use function plotgetcounts()
}
\description{
Counts the number of reads in each regulatory region for
each sample type -- read count is derived from user-input BAM filex, and regions
of interest are supplied in a GRanges object, ideally output of combineAnnotatePeaks.
The function getCounts generates count data using the summerizeOverlaps
function from the GenomicAlignments package. This function is slower than the
count function getCountsFast in the ALTRE package. However,
getCounts MUST be used to count reads on a Windows
computer -- getCountsFast is not available in Windows.
If the package is being run on Linux or MacOS, use getCountsFast. For
high-thoughput experiments (many samples need to be
analyzed), it is highly suggested that a non-Windows computer is used (MacOS/Linux).
To be clear: GetCounts and getCountsFast give the EXACT SAME results.
}
\examples{
\dontrun{
csvfile <- loadCSVFile("DNAseEncodeExample.csv")
samplePeaks <- loadBedFiles(csvfile)
consensusPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
TSSannot <- getTSS()
consensusPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consensusPeaks,
   TSS = TSSannot,
   merge = TRUE,
   regionspecific = TRUE,
   distancefromTSSdist = 1500,
   distancefromTSSprox = 1000)
consensusPeaksCounts <- getCounts(annotpeaks = consensusPeaksAnnotated,
   sampleinfo = csvfile,
   reference = 'SAEC',
   chrom = 'chr21')
}
}

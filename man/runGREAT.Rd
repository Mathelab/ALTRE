% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_runGREATpathway.R
\name{runGREAT}
\alias{runGREAT}
\title{Enrichment analysis using GREAT package
to identify putative pathways of interest for further
investigation}
\usage{
runGREAT(peaks, species = "hg19", rule = "basalPlusExt", adv_upstream = 5,
  adv_downstream = 1, adv_span = 1000, adv_twoDistance = 1000,
  adv_oneDistance = 1000, pathway_category = "GO")
}
\arguments{
\item{peaks}{list, output of categAltrePeaks() function
#@param peaktype character, "Experiment Specific", "Reference Specific",
#    "Ambiguous", "Shared", or "All" (All is default)}

\item{species}{default hg19}

\item{rule}{character, "basalPlusExt", "twoClosest", "oneClosest" rule that associates
genomic regions to genes (default is "basalPlusExt").
See https://bioconductor.org/packages/release/bioc/html/chipenrich.html for more detail.}

\item{adv_upstream}{kb, extension to upstream (if rule is basalPlusExt), default 5}

\item{adv_downstream}{kb, extension to downstream (if rule is basalPlusExt), default 1.0}

\item{adv_span}{kb, max extension (if rule is basalPlusExt), default 1000.0}

\item{adv_twoDistance}{kb, max extension (if rule is twoClosest), default 1000.0}

\item{adv_oneDistance}{kb, max extension (if rule is oneClosest), default 1000.0}

\item{pathway_category}{character, "GO", "Pathway Data", "Regulatory Motifs",
"Phenotype Data and Human Disease", "Gene Expression", "Gene Families"
(default is "GO")}
}
\value{
ways --
pathways also annotated with additional information
}
\description{
Enrichment analysis using GREAT package
to identify putative pathways of interest for further
investigation
}
\examples{
\dontrun{
csvfile <- loadCSVFile("DNaseEncodeExample.csv")
samplePeaks <- loadBedFiles(csvfile)
consensusPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
TSSannot <- getTSS()
consensusPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consensusPeaks,
                                          TSS = TSSannot,
                                          merge = TRUE,
                                          regionspecific = TRUE,
                                          distancefromTSSdist = 1500,
                                          distancefromTSSprox = 1000)
consensusPeaksCounts <- getCounts(annotpeaks = consensusPeaksAnnotated,
                              reference = 'SAEC',
                              sampleinfo = csvfile,
                              chrom = 'chr21')
alteredPeaks <- countanalysis(counts=consensusPeaksCounts,
                             pval=0.01,
                             lfcvalue=1)
alteredPeaksCategorized <- categAltrePeaks(alteredPeaks,
                             lfctypespecific = 1.5,
                             lfcshared = 1.2,
                             pvaltypespecific = 0.01,
                             pvalshared = 0.05)
callPaths <- runGREAT(peaks = alteredPeaksCategorized)
}
}
